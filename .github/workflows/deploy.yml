name: Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SERVER: ${{ vars.SERVER }}
      SSH_USER: ${{ vars.SSH_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      DATABASE_HOST: ${{ vars.DATABASE_HOST }}
      DATABASE_NAME: ${{ vars.DATABASE_NAME }}
      DATABASE_USER: ${{ vars.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ vars.DATABASE_PASSWORD }}
      RABBITMQ_HOST: ${{ vars.RABBITMQ_HOST }}
      RABBITMQ_USER: ${{ vars.RABBITMQ_USER }}
      RABBITMQ_PASSWORD: ${{ vars.RABBITMQ_PASSWORD }}`
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
    steps:
#      - uses: actions/checkout@v4
      #      - uses: actions/checkout@v4
      # before_script
#      - run: apt-get update -qq
#      - run: apt-get install -qq git
#      - run: 'which ssh-agent || ( apt-get install -qq openssh-client )'
#      - run: eval $(ssh-agent -s)
#      - run: ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
#      - run: mkdir -p ~/.ssh
#      - run: echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      # Deploy
#      - run: apt-get update -qq
#      - run: apt-get install -qq git
#      - run: 'which ssh-agent || ( apt-get install -qq openssh-client )'
#      - run: eval $(ssh-agent -s) && ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 -d)
#      - run: mkdir -p ~/.ssh
#      - run: echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      - run: mkdir -p /home/runner/.ssh
      - run: ssh-keyscan $SERVER >> /home/runner/.ssh/known_hosts
      - run: echo "$SSH_PRIVATE_KEY" > /home/runner/.ssh/github_actions
      - run: chmod 600 /home/runner/.ssh/github_actions
      - run: ssh-agent -a $SSH_AUTH_SOCK > /dev/null
      - run: ssh-add /home/runner/.ssh/github_actions
      - run: ssh $SSH_USER@$SERVER rm -rf /var/www/demo
      - run: cd /var/www
      - run: git clone git@github.com:kuzmich11/otus-work.git demo
      - run: chown www-data:www-data demo -R
      - run: cd demo
      - run: sh ./deploy.sh $SERVER $DATABASE_HOST $DATABASE_USER $DATABASE_PASSWORD $DATABASE_NAME $RABBITMQ_HOST $RABBITMQ_USER $RABBITMQ_PASSWORD

